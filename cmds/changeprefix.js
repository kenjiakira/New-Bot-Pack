const fs = require('fs');

module.exports = {
    name: "changeprefix",
    usedby: 4,
    info: "Thay ƒë·ªïi ti·ªÅn t·ªë l·ªánh c·ªßa bot",
    dev: "Jonell Magallanes",
    usages: "changeprefix <ti·ªÅn t·ªë m·ªõi>",
    onPrefix: true,
    cooldowns: 20,

    onLaunch: async function ({ api, event, target }) {
        const threadID = event.threadID;
        const newPrefix = target.join(" ").trim();

        if (!newPrefix) {
            return api.sendMessage("Vui l√≤ng cung c·∫•p m·ªôt ti·ªÅn t·ªë m·ªõi. C√°ch s·ª≠ d·ª•ng: -changeprefix [ti·ªÅn t·ªë m·ªõi]", threadID);
        }

        const confirmationMessage = `‚ùì ùóñùóµùóÆùóªùó¥ùó≤ ùó£ùóøùó≤ùó≥ùó∂ùòÖ ùóñùóºùóªùó≥ùó∂ùóøùó∫ùóÆùòÅùó∂ùóºùóª\n${global.line}\nVui l√≤ng ph·∫£n ·ª©ng v·ªõi tin nh·∫Øn n√†y (üëç) ƒë·ªÉ x√°c nh·∫≠n thay ƒë·ªïi ti·ªÅn t·ªë th√†nh '${newPrefix}' ho·∫∑c ph·∫£n ·ª©ng (üëé) ƒë·ªÉ h·ªßy b·ªè.`;

        const threadIDPath = './database/prefix/threadID.json';
        const data = { threadID: threadID };

        fs.writeFile(threadIDPath, JSON.stringify(data, null, 2), (err) => {
            if (err) {
                console.error("L·ªói khi l∆∞u threadID:", err);
            }
        });

        const sentMessage = await api.sendMessage(confirmationMessage, threadID);

        global.client.callReact.push({
            name: this.name,
            messageID: sentMessage.messageID,
            newPrefix: newPrefix
        });
    },

    callReact: async function ({ reaction, event, api }) {
        const { threadID, messageID } = event;
        const reactData = global.client.callReact.find(item => item.messageID === messageID);

        if (!reactData) return;

        const adminConfigPath = "./admin.json";

        if (reaction === 'üëç') {
            try {
                const adminConfig = JSON.parse(fs.readFileSync(adminConfigPath, 'utf8'));
                adminConfig.prefix = reactData.newPrefix;

                fs.writeFile(adminConfigPath, JSON.stringify(adminConfig, null, 2), (err) => {
                    if (err) {
                        return api.sendMessage("L·ªói khi l∆∞u ti·ªÅn t·ªë m·ªõi, vui l√≤ng th·ª≠ l·∫°i.", threadID);
                    }

                    api.sendMessage(`üîÑ ùóñùóµùóÆùóªùó¥ùó∂ùóªùó¥ ùóΩùóøùó≤ùó≥ùó∂ùòÖ ùòÅùóº '${reactData.newPrefix}'\n${global.line}\nVui l√≤ng ch·ªù...`, threadID, () => {
                        api.unsendMessage(messageID);
                        setTimeout(() => process.exit(1), 2000);
                    });
                });
            } catch (err) {
                api.sendMessage("L·ªói khi thay ƒë·ªïi ti·ªÅn t·ªë, vui l√≤ng th·ª≠ l·∫°i.", threadID);
            }
        } else if (reaction === 'üëé') {
            api.sendMessage("‚ùå ùóñùóµùóÆùóªùó¥ùó≤ ùó£ùóøùó≤ùó≥ùó∂ùòÖ ùóñùóÆùóªùó∞ùó≤ùóπùóπùó≤ùó±", threadID, () => {
                api.unsendMessage(messageID); 
            });
        }

        global.client.callReact = global.client.callReact.filter(item => item.messageID !== messageID);
    }
};
