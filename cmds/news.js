const axios = require('axios');
const cheerio = require('cheerio');
const { GoogleGenerativeAI } = require("@google/generative-ai");

const API_KEYS = [
    "AIzaSyDMp6YNWYUw_wQBdv4DjkAOvZXJv7ITRy0",
    "AIzaSyDysChx19Lu3hAFpE2knZwkoCWGTN2gfy0",
    "AIzaSyCTvL29weT4BIn7WtFtTvsaQ5Jt6Dm4mBE",
    "AIzaSyDoCGS2-hagw5zWVMfL5iqAVRFNivtbam4",
    "AIzaSyASuW0stXR61_xJ3s0XP3Qw0RoudGCjQRQ",
    "AIzaSyC78Dqs1rdEfj4JcmlSFEBhJZLOJzWmt_Y",
    "AIzaSyDpqfVtdyGLfipEdRNFfUQbCH-prn1sHEs",
    "AIzaSyArI6Ww02Ill7b6Bx5itiKlHD62siAFLIc",
    "AIzaSyBgYVR81UeL7kYouxcwzUL75YOBafgNphU"
];

module.exports = {
    name: "news",
    info: "Xem tin t·ª©c m·ªõi nh·∫•t",
    dev: "HungCho mod by Ho√†ng Ng·ªçc T·ª´",
    onPrefix: true,
    dmUser: false,
    nickName: ["news"],
    usages: "news\n\nL·ªánh n√†y l·∫•y tin t·ª©c m·ªõi nh·∫•t t·ª´ VnExpress v√† g·ª≠i ƒë·∫øn b·∫°n",
    cooldowns: 0,
    dependencies: { "axios": "", "cheerio": "", "@google/generative-ai": "" },

    generateNewsDescription: async function(newsData) {
        let description = '';

        for (let i = 0; i < API_KEYS.length; i++) {
            const genAI = new GoogleGenerativeAI(API_KEYS[i]);
            const model = genAI.getGenerativeModel({ model: "gemini-1.5-pro" });

            const prompt = `
                H√£y t·∫°o m·ªôt ƒëo·∫°n m√¥ t·∫£ ng·∫Øn g·ªçn v√† h·∫•p d·∫´n cho tin t·ª©c sau:
                - Ti√™u ƒë·ªÅ: ${newsData.title}
                - N·ªôi dung: ${newsData.content}
                - Link: ${newsData.link}

                S·ª≠ d·ª•ng phong c√°ch t∆∞·ªùng thu·∫≠t tin t·ª©c, th√™m emoji n·∫øu c√≥ th·ªÉ, v√† l√†m cho m√¥ t·∫£ tr·ªü n√™n sinh ƒë·ªông v√† h·∫•p d·∫´n.
            `;

            try {
                const result = await model.generateContent([{ text: prompt }]);
                description = await result.response.text();
                break;
            } catch (error) {
                console.error(`L·ªói khi s·ª≠ d·ª•ng API Gemini v·ªõi API key th·ª© ${i + 1}:`, error);
                if (i === API_KEYS.length - 1) {
                    console.warn("T·∫•t c·∫£ API keys ƒë√£ ch·∫øt, quay l·∫°i s·ª≠ d·ª•ng m√¥ t·∫£ g·ªëc.");
                    return `Ti√™u ƒë·ªÅ: ${newsData.title}\nN·ªôi dung: ${newsData.content}\nLink: ${newsData.link}`;
                }
            }
        }

        return description;
    },

    onLaunch: async function({ api, event }) {
        try {
            const response = await axios.get('https://vnexpress.net/tin-tuc-24h');
            const $ = cheerio.load(response.data);
            const thoigian = $('.time-count');
            const tieude = $('.thumb-art');
            const noidung = $('.description');

            const time = thoigian.find('span').attr('datetime');
            const title = tieude.find('a').attr('title');
            const des = noidung.find('a').text();
            const link = noidung.find('a').attr('href');
            const description = des.split('.');

            const newsData = {
                title: title,
                content: description[0],
                link: link
            };

            const newsDescription = await this.generateNewsDescription(newsData);

            const message = `===  [ ùóßùóúùó° ùóßùó®ÃõÃÅùóñ ] ===\n‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\nüì∫ Tin t·ª©c m·ªõi nh·∫•t\n‚è∞ Th·ªùi gian ƒëƒÉng: ${time}\nüì∞ Ti√™u ƒë·ªÅ: ${newsData.title}\n\nüìå N·ªôi dung: ${newsDescription}\nüîó Link: ${newsData.link}\n`;

            await api.sendMessage(message, event.threadID, event.messageID);
        } catch (error) {
            console.error(error);
            await api.sendMessage("ƒê√£ x·∫£y ra l·ªói khi l·∫•y tin t·ª´ VnExpress.", event.threadID, event.messageID);
        }
    }
};
