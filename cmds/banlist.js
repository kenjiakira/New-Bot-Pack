const fs = require('fs');

let bannedThreads = {};
let bannedUsers = {};

try {
    bannedThreads = JSON.parse(fs.readFileSync('./database/ban/threads.json'));
} catch (err) {
    console.error("L·ªói khi ƒë·ªçc t·ªáp d·ªØ li·ªáu danh s√°ch nh√≥m b·ªã c·∫•m:", err);
}

try {
    bannedUsers = JSON.parse(fs.readFileSync('./database/ban/users.json'));
} catch (err) {
    console.error("L·ªói khi ƒë·ªçc t·ªáp d·ªØ li·ªáu danh s√°ch ng∆∞·ªùi d√πng b·ªã c·∫•m:", err);
}

module.exports = {
    name: "banlist",
    usedby: 4,
    info: "L·∫•y danh s√°ch t·∫•t c·∫£ c√°c nh√≥m v√† ng∆∞·ªùi d√πng b·ªã c·∫•m",
    onPrefix: true,
    cooldowns: 20,

    onLaunch: async function ({ event, api }) {
        const getThreadName = async (threadID) => {
            return new Promise((resolve) => {
                api.getThreadInfo(threadID, (err, info) => {
                    if (err) return resolve(`ID Nh√≥m: ${threadID}`);
                    resolve(info.threadName || `ID Nh√≥m: ${threadID}`);
                });
            });
        };

        const getUserName = async (userID) => {
            return new Promise((resolve) => {
                api.getUserInfo(userID, (err, info) => {
                    if (err || !info[userID]) return resolve(`ID Ng∆∞·ªùi D√πng: ${userID}`);
                    resolve(info[userID].name || `ID Ng∆∞·ªùi D√πng: ${userID}`);
                });
            });
        };

        const bannedThreadList = await Promise.all(
            Object.keys(bannedThreads).map(async (threadID) => {
                const threadName = await getThreadName(threadID);
                return `‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\nüë• Nh√≥m Chat: ${threadName}\nüìù L√Ω Do: ${bannedThreads[threadID].reason}\n‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n`;
            })
        );

        const bannedUserList = await Promise.all(
            Object.keys(bannedUsers).map(async (userID) => {
                const userName = await getUserName(userID);
                return `‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\nüë§ T√™n: ${userName}\nüìù L√Ω Do: ${bannedUsers[userID].reason}\n‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n`;
            })
        );

        let message = "ùóóùóÆùóªùóµ ùó¶√°ùó∞ùóµ ùóïùó∂Ã£ ùóñùóÆÃÇÃÅùó∫\n‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n";

        if (bannedThreadList.length > 0) {
            message += `Nh√≥m B·ªã C·∫•m:\n${bannedThreadList.join('\n')}\n\n`;
        } else {
            message += "Kh√¥ng c√≥ nh√≥m n√†o b·ªã c·∫•m.\n\n";
        }

        if (bannedUserList.length > 0) {
            message += `Ng∆∞·ªùi D√πng B·ªã C·∫•m:\n${bannedUserList.join('\n')}`;
        } else {
            message += "Kh√¥ng c√≥ ng∆∞·ªùi d√πng n√†o b·ªã c·∫•m.";
        }

        return api.sendMessage(message, event.threadID);
    }
};
